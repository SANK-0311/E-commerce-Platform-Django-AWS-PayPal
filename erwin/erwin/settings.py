"""
Django settings for erwin project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import environ
import os
# Define BASE_DIR first!
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Initialise environment variables
env = environ.Env()
environ.Env.read_env()




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['erwiq.com','www.erwiq.com','*']

CSRF_TRUSTED_ORIGINS = ['https://erwiq.com','https://www.erwiq.com']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "store",#Django app for store functionality
    "cart", #Django app for cart functionality
    'mathfilters', #Django app for math filters
    'account', #Django app for user accounts
    'payment', #Django app for payment processing


    'crispy_forms', #Django app for crispy forms
    'crispy_bootstrap4', #Django app for crispy forms with bootstrap4
    'crispy_bootstrap5', #Django app for crispy forms with bootstrap5
    'storages',
]
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = 'bootstrap5' #Setting crispy forms to use bootstrap4


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "erwin.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                'store.views.categories', #updated
                'cart.context_processors.cart', #updated 
            ],
        },
    },
]

WSGI_APPLICATION = "erwin.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# '''
# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }
# '''

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "/static/"

STATICFILES_DIRS = [BASE_DIR/'static']


MEDIA_URL = '/media/'

MEDIA_ROOT = BASE_DIR / 'static/media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = '587'
EMAIL_USE_TLS = True

# Be sure to set these to your actual email and password
# If you are using Gmail, you may need to allow "less secure apps" in your Google account settings.
# Alternatively, you can use an App Password if you have 2-Step Verification enabled.

EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')


#Allow Paypal Popups

SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same_origin-allow-popups'



#AWS CONFIGURATION
AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')

#Amazon S3 Integration

AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME') #ENTER THE S3 BUCKET NAME HERE


#DJANGO 4.2 > STORAGE CONFIGURATION FOR S3
STORAGES = {
    #Media file (image) management
    "default" : {
        "BACKEND" : "storages.backends.s3boto3.S3StaticStorage",
    },

    #CSS and JS file management
    "staticfiles" : {
        "BACKEND" : "storages.backends.s3boto3.S3StaticStorage",
    },    
}

AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME

AWS_S3_FILE_OVERWRITE = False

#RDS (DATABASES) CONFIGURATION SETTINGS: -->RDS - RELATIONAL DATABASES
DATABASES = {
    'default' : {
        'ENGINE' : 'django.db.backends.postgresql',
        'NAME' : os.environ.get('NAME'),
        'USER' : os.environ.get('USER'),
        'PASSWORD' : os.environ.get('PASSWORD'),
        'HOST' : os.environ.get('HOST'),
        'PORT' : '5432',
    }
}

